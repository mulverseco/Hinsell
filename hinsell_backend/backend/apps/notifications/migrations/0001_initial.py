# Generated by Django 5.2.3 on 2025-06-25 08:42

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organization', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('email_enabled', models.BooleanField(default=True, verbose_name='Email Notifications Enabled')),
                ('email_welcome', models.BooleanField(default=True, verbose_name='Welcome Emails')),
                ('email_security', models.BooleanField(default=True, verbose_name='Security Alerts')),
                ('email_inventory', models.BooleanField(default=True, verbose_name='Inventory Alerts')),
                ('email_transactions', models.BooleanField(default=True, verbose_name='Transaction Notifications')),
                ('email_payments', models.BooleanField(default=True, verbose_name='Payment Reminders')),
                ('sms_enabled', models.BooleanField(default=False, verbose_name='SMS Notifications Enabled')),
                ('sms_security', models.BooleanField(default=True, verbose_name='Security SMS')),
                ('sms_urgent', models.BooleanField(default=True, verbose_name='Urgent SMS')),
                ('whatsapp_enabled', models.BooleanField(default=True, verbose_name='WhatsApp Notifications Enabled')),
                ('whatsapp_inventory', models.BooleanField(default=True, verbose_name='Inventory WhatsApp')),
                ('whatsapp_transactions', models.BooleanField(default=True, verbose_name='Transaction WhatsApp')),
                ('whatsapp_payments', models.BooleanField(default=True, verbose_name='Payment WhatsApp')),
                ('in_app_enabled', models.BooleanField(default=True, verbose_name='In-App Notifications Enabled')),
                ('quiet_hours_enabled', models.BooleanField(default=False, verbose_name='Quiet Hours Enabled')),
                ('quiet_hours_start', models.TimeField(blank=True, null=True, verbose_name='Quiet Hours Start')),
                ('quiet_hours_end', models.TimeField(blank=True, null=True, verbose_name='Quiet Hours End')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('name', models.CharField(help_text='Descriptive name for the template', max_length=100, verbose_name='Template Name')),
                ('notification_type', models.CharField(choices=[('welcome', 'Welcome'), ('password_reset', 'Password Reset'), ('security_alert', 'Security Alert'), ('inventory_low', 'Low Inventory'), ('inventory_expired', 'Expired Inventory'), ('transaction_approved', 'Transaction Approved'), ('transaction_rejected', 'Transaction Rejected'), ('payment_due', 'Payment Due'), ('payment_overdue', 'Payment Overdue'), ('system_maintenance', 'System Maintenance'), ('custom', 'Custom')], help_text='Type of notification this template is for', max_length=20, verbose_name='Notification Type')),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('in_app', 'In-App'), ('push', 'Push Notification')], help_text='Delivery channel for this template', max_length=10, verbose_name='Channel')),
                ('subject', models.CharField(blank=True, help_text='Subject line (for email) or title (for other channels)', max_length=200, verbose_name='Subject')),
                ('content', models.TextField(help_text='Template content with placeholders', verbose_name='Content')),
                ('html_content', models.TextField(blank=True, help_text='HTML version of the content (for email)', verbose_name='HTML Content')),
                ('variables', models.JSONField(blank=True, default=dict, help_text='Available variables for this template', verbose_name='Template Variables')),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default template for this type and channel', verbose_name='Default Template')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_templates', to='organization.branch', verbose_name='Branch')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('recipient_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Recipient Email')),
                ('recipient_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Recipient Phone')),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('in_app', 'In-App'), ('push', 'Push Notification')], max_length=10, verbose_name='Channel')),
                ('notification_type', models.CharField(choices=[('welcome', 'Welcome'), ('password_reset', 'Password Reset'), ('security_alert', 'Security Alert'), ('inventory_low', 'Low Inventory'), ('inventory_expired', 'Expired Inventory'), ('transaction_approved', 'Transaction Approved'), ('transaction_rejected', 'Transaction Rejected'), ('payment_due', 'Payment Due'), ('payment_overdue', 'Payment Overdue'), ('system_maintenance', 'System Maintenance'), ('custom', 'Custom')], max_length=20, verbose_name='Type')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10, verbose_name='Priority')),
                ('subject', models.CharField(max_length=200, verbose_name='Subject')),
                ('content', models.TextField(verbose_name='Content')),
                ('html_content', models.TextField(blank=True, null=True, verbose_name='HTML Content')),
                ('context_data', models.JSONField(blank=True, default=dict, help_text='Data used to render the notification', verbose_name='Context Data')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=10, verbose_name='Status')),
                ('scheduled_at', models.DateTimeField(blank=True, help_text='When to send this notification', null=True, verbose_name='Scheduled At')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivered At')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Read At')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Error Message')),
                ('retry_count', models.PositiveIntegerField(default=0, verbose_name='Retry Count')),
                ('max_retries', models.PositiveIntegerField(default=3, verbose_name='Max Retries')),
                ('external_id', models.CharField(blank=True, help_text='ID from external service (SMS provider, etc.)', max_length=100, null=True, verbose_name='External ID')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='organization.branch', verbose_name='Branch')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('recipient_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Recipient User')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='notifications.notificationtemplate', verbose_name='Template')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='UserNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('reminder_date', models.DateTimeField(blank=True, null=True)),
                ('is_reminder_sent', models.BooleanField(default=False)),
                ('tags', models.CharField(blank=True, max_length=200)),
                ('color', models.CharField(default='#ffffff', max_length=7)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.branch')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InternalMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.branch')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'indexes': [models.Index(fields=['created_by'], name='notificatio_created_94b4b4_idx'), models.Index(fields=['updated_by'], name='notificatio_updated_54f3df_idx')],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('action', models.CharField(choices=[('created', 'Created'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed'), ('retried', 'Retried'), ('cancelled', 'Cancelled')], max_length=20, verbose_name='Action')),
                ('details', models.JSONField(blank=True, default=dict, verbose_name='Details')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Error Message')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notification', verbose_name='Notification')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'indexes': [models.Index(fields=['notification', 'created_at'], name='notificatio_notific_28445a_idx'), models.Index(fields=['action'], name='notificatio_action_ce23ae_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='notificationtemplate',
            index=models.Index(fields=['branch', 'notification_type'], name='notificatio_branch__ae379a_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationtemplate',
            index=models.Index(fields=['channel'], name='notificatio_channel_ba807a_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationtemplate',
            index=models.Index(fields=['is_default'], name='notificatio_is_defa_14bff1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationtemplate',
            unique_together={('branch', 'notification_type', 'channel', 'is_default')},
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['branch', 'status'], name='notificatio_branch__e8d7eb_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient_user', 'status'], name='notificatio_recipie_3f887c_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['channel', 'status'], name='notificatio_channel_289841_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['scheduled_at'], name='notificatio_schedul_21ac35_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='notificatio_created_46ad24_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority', 'status'], name='notificatio_priorit_27f109_idx'),
        ),
        migrations.AddIndex(
            model_name='usernote',
            index=models.Index(fields=['created_by'], name='notificatio_created_d09a18_idx'),
        ),
        migrations.AddIndex(
            model_name='usernote',
            index=models.Index(fields=['updated_by'], name='notificatio_updated_3d423d_idx'),
        ),
    ]
