# Generated by Django 5.2.3 on 2025-06-25 08:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounting', '0003_initial'),
        ('inventory', '0001_initial'),
        ('medical', '0001_initial'),
        ('organization', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='sampledistribution',
            name='visit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medical.doctorvisit'),
        ),
        migrations.AddField(
            model_name='storegroup',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_groups', to='organization.branch', verbose_name='Branch'),
        ),
        migrations.AddField(
            model_name='storegroup',
            name='cost_of_sales_account',
            field=models.ForeignKey(blank=True, help_text='Default cost of sales account', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cost_store_groups', to='accounting.account', verbose_name='Cost of Sales Account'),
        ),
        migrations.AddField(
            model_name='storegroup',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='storegroup',
            name='sales_account',
            field=models.ForeignKey(blank=True, help_text='Default sales account', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_store_groups', to='accounting.account', verbose_name='Sales Account'),
        ),
        migrations.AddField(
            model_name='storegroup',
            name='stock_account',
            field=models.ForeignKey(blank=True, help_text='Default stock/inventory account', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_store_groups', to='accounting.account', verbose_name='Stock Account'),
        ),
        migrations.AddField(
            model_name='storegroup',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='itemgroup',
            name='store_group',
            field=models.ForeignKey(help_text='Parent store group', on_delete=django.db.models.deletion.CASCADE, related_name='item_groups', to='inventory.storegroup', verbose_name='Store Group'),
        ),
        migrations.AddIndex(
            model_name='inventorybalance',
            index=models.Index(fields=['branch', 'item'], name='inventory_i_branch__94f116_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorybalance',
            index=models.Index(fields=['item'], name='inventory_i_item_id_392f4a_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorybalance',
            index=models.Index(fields=['expiry_date'], name='inventory_i_expiry__5cf318_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorybalance',
            index=models.Index(fields=['batch_number'], name='inventory_i_batch_n_ca2687_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorybalance',
            index=models.Index(fields=['available_quantity'], name='inventory_i_availab_bf6450_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorybalance',
            index=models.Index(fields=['last_movement_date'], name='inventory_i_last_mo_a668c8_idx'),
        ),
        migrations.AddConstraint(
            model_name='inventorybalance',
            constraint=models.CheckConstraint(condition=models.Q(('reserved_quantity__gte', 0)), name='non_negative_reserved_quantity'),
        ),
        migrations.AlterUniqueTogether(
            name='inventorybalance',
            unique_together={('branch', 'item', 'location', 'batch_number', 'expiry_date')},
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['branch'], name='inventory_i_branch__41ed82_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['item_group'], name='inventory_i_item_gr_864959_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['item_code'], name='inventory_i_item_co_e61695_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['item_name'], name='inventory_i_item_na_83e4bd_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['manufacturer'], name='inventory_i_manufac_3c7e24_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['brand'], name='inventory_i_brand_295ed4_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['scientific_name'], name='inventory_i_scienti_4efb1f_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['is_active'], name='inventory_i_is_acti_fd4174_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['is_service_item'], name='inventory_i_is_serv_e317a9_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['track_expiry'], name='inventory_i_track_e_778a6b_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['track_batches'], name='inventory_i_track_b_5df9a1_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['is_prescription_required'], name='inventory_i_is_pres_99ebee_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['is_controlled_substance'], name='inventory_i_is_cont_b5ea98_idx'),
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.CheckConstraint(condition=models.Q(('markup_percentage__gte', 0), ('markup_percentage__lte', 1000)), name='item_valid_markup_percentage'),
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.CheckConstraint(condition=models.Q(('discount_percentage__gte', 0), ('discount_percentage__lte', 100)), name='item_valid_discount_percentage'),
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.CheckConstraint(condition=models.Q(('commission_percentage__gte', 0), ('commission_percentage__lte', 100)), name='item_valid_commission_percentage'),
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.CheckConstraint(condition=models.Q(('vat_percentage__gte', 0), ('vat_percentage__lte', 100)), name='item_valid_vat_percentage'),
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.CheckConstraint(condition=models.Q(('minimum_order_quantity__gt', 0)), name='item_positive_minimum_order_quantity'),
        ),
        migrations.AlterUniqueTogether(
            name='item',
            unique_together={('branch', 'item_code')},
        ),
        migrations.AddIndex(
            model_name='itemunit',
            index=models.Index(fields=['item'], name='inventory_i_item_id_dd28ec_idx'),
        ),
        migrations.AddIndex(
            model_name='itemunit',
            index=models.Index(fields=['unit_code'], name='inventory_i_unit_co_2e387a_idx'),
        ),
        migrations.AddIndex(
            model_name='itemunit',
            index=models.Index(fields=['is_default'], name='inventory_i_is_defa_5594ab_idx'),
        ),
        migrations.AddIndex(
            model_name='itemunit',
            index=models.Index(fields=['is_active'], name='inventory_i_is_acti_6aaf08_idx'),
        ),
        migrations.AddConstraint(
            model_name='itemunit',
            constraint=models.CheckConstraint(condition=models.Q(('conversion_factor__gt', 0)), name='positive_conversion_factor'),
        ),
        migrations.AlterUniqueTogether(
            name='itemunit',
            unique_together={('item', 'unit_code')},
        ),
        migrations.AddIndex(
            model_name='itembarcode',
            index=models.Index(fields=['barcode'], name='inventory_i_barcode_0e0c0b_idx'),
        ),
        migrations.AddIndex(
            model_name='itembarcode',
            index=models.Index(fields=['item'], name='inventory_i_item_id_80029b_idx'),
        ),
        migrations.AddIndex(
            model_name='itembarcode',
            index=models.Index(fields=['is_primary'], name='inventory_i_is_prim_433848_idx'),
        ),
        migrations.AddIndex(
            model_name='itembarcode',
            index=models.Index(fields=['is_active'], name='inventory_i_is_acti_f14035_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='itembarcode',
            unique_together={('item', 'barcode')},
        ),
        migrations.AlterUniqueTogether(
            name='sampledistribution',
            unique_together={('visit', 'item', 'unit')},
        ),
        migrations.AddIndex(
            model_name='storegroup',
            index=models.Index(fields=['branch'], name='inventory_s_branch__788ac2_idx'),
        ),
        migrations.AddIndex(
            model_name='storegroup',
            index=models.Index(fields=['store_group_code'], name='inventory_s_store_g_efcec3_idx'),
        ),
        migrations.AddIndex(
            model_name='storegroup',
            index=models.Index(fields=['is_active'], name='inventory_s_is_acti_d4613c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='storegroup',
            unique_together={('branch', 'store_group_code')},
        ),
        migrations.AddIndex(
            model_name='itemgroup',
            index=models.Index(fields=['branch'], name='inventory_i_branch__9bad34_idx'),
        ),
        migrations.AddIndex(
            model_name='itemgroup',
            index=models.Index(fields=['store_group'], name='inventory_i_store_g_c00240_idx'),
        ),
        migrations.AddIndex(
            model_name='itemgroup',
            index=models.Index(fields=['parent'], name='inventory_i_parent__000e84_idx'),
        ),
        migrations.AddIndex(
            model_name='itemgroup',
            index=models.Index(fields=['item_group_code'], name='inventory_i_item_gr_0518af_idx'),
        ),
        migrations.AddIndex(
            model_name='itemgroup',
            index=models.Index(fields=['group_type'], name='inventory_i_group_t_a6056d_idx'),
        ),
        migrations.AddIndex(
            model_name='itemgroup',
            index=models.Index(fields=['is_active'], name='inventory_i_is_acti_fc047a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='itemgroup',
            unique_together={('branch', 'item_group_code')},
        ),
    ]
