# Generated by Django 5.2.3 on 2025-08-01 09:07

import apps.core_apps.utils
import apps.core_apps.validators
import django.core.validators
import phonenumber_field.modelfields
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('code', models.CharField(default=apps.core_apps.utils.get_default_account_code, max_length=20, verbose_name='Code')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('account_nature', models.CharField(choices=[('customer', 'Customer'), ('supplier', 'Supplier'), ('bank', 'Bank'), ('cash', 'Cash'), ('inventory', 'Inventory'), ('fixed_asset', 'Fixed Asset'), ('other', 'Other')], default='other', max_length=20, verbose_name='Account Nature')),
                ('is_header', models.BooleanField(default=False, verbose_name='Header Account')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Hidden')),
                ('is_system', models.BooleanField(default=False, verbose_name='System Account')),
                ('is_taxable', models.BooleanField(default=False, verbose_name='Taxable')),
                ('tax_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Tax Code')),
                ('commission_ratio', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[apps.core_apps.validators.validate_percentage], verbose_name='Commission Ratio')),
                ('credit_limit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Credit Limit')),
                ('debit_limit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Debit Limit')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Phone Number')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('tax_registration_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tax Registration Number')),
                ('stop_sales', models.BooleanField(default=False, verbose_name='Stop Sales')),
                ('current_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Current Balance')),
                ('budget_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Budget Amount')),
                ('enable_notifications', models.JSONField(default=apps.core_apps.utils.get_default_notifications, help_text="Channels for notifications: {'email': bool, 'sms': bool, 'whatsapp': bool, 'in_app': bool, 'push': bool}", verbose_name='Notification Settings')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
            },
        ),
        migrations.CreateModel(
            name='AccountingPeriod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('code', models.CharField(default=apps.core_apps.utils.get_default_accounting_period_code, max_length=10, verbose_name='Code')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('fiscal_year', models.IntegerField(verbose_name='Fiscal Year')),
                ('is_closed', models.BooleanField(default=False, verbose_name='Is Closed')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Closed At')),
            ],
            options={
                'verbose_name': 'Accounting Period',
                'verbose_name_plural': 'Accounting Periods',
            },
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('code', models.CharField(default=apps.core_apps.utils.get_default_account_type_code, max_length=10, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('category', models.CharField(choices=[('asset', 'Asset'), ('liability', 'Liability'), ('equity', 'Equity'), ('revenue', 'Revenue'), ('expense', 'Expense'), ('cogs', 'Cost of Goods Sold')], max_length=20, verbose_name='Category')),
                ('normal_balance', models.CharField(choices=[('debit', 'Debit'), ('credit', 'Credit')], max_length=6, verbose_name='Normal Balance')),
            ],
            options={
                'verbose_name': 'Account Type',
                'verbose_name_plural': 'Account Types',
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('code', models.CharField(default=apps.core_apps.utils.get_default_budget_code, max_length=20, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('fiscal_year', models.IntegerField(verbose_name='Fiscal Year')),
                ('budgeted_amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Budgeted Amount')),
                ('actual_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Actual Amount')),
            ],
            options={
                'verbose_name': 'Budget',
                'verbose_name_plural': 'Budgets',
            },
        ),
        migrations.CreateModel(
            name='CostCenter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('code', models.CharField(default=apps.core_apps.utils.get_default_cost_center_code, max_length=20, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('is_header', models.BooleanField(default=False, verbose_name='Header Cost Center')),
                ('budget_limit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Budget Limit')),
            ],
            options={
                'verbose_name': 'Cost Center',
                'verbose_name_plural': 'Cost Centers',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('code', models.CharField(default=apps.core_apps.utils.get_default_currency_code, help_text='ISO currency code (e.g., USD, EUR)', max_length=5, verbose_name='Code')),
                ('name', models.CharField(help_text='Full currency name', max_length=50, verbose_name='Name')),
                ('symbol', models.CharField(blank=True, help_text='Currency symbol (e.g., $, €)', max_length=5, null=True, verbose_name='Symbol')),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default currency for the branch', verbose_name='Default Currency')),
                ('decimal_places', models.PositiveIntegerField(default=2, help_text='Number of decimal places for this currency', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)], verbose_name='Decimal Places')),
                ('exchange_rate', models.DecimalField(decimal_places=8, default=Decimal('1.00000000'), help_text='Exchange rate relative to base currency', max_digits=15, validators=[apps.core_apps.validators.validate_positive_decimal], verbose_name='Exchange Rate')),
                ('exchange_rate_date', models.DateTimeField(auto_now=True, verbose_name='Exchange Rate Date')),
                ('upper_limit', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Upper Limit')),
                ('lower_limit', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Lower Limit')),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='CurrencyHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('old_exchange_rate', models.DecimalField(decimal_places=8, max_digits=15, verbose_name='Old Exchange Rate')),
                ('new_exchange_rate', models.DecimalField(decimal_places=8, max_digits=15, verbose_name='New Exchange Rate')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Reason')),
            ],
            options={
                'verbose_name': 'Currency History',
                'verbose_name_plural': 'Currency History',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OpeningBalance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('fiscal_year', models.IntegerField(verbose_name='Fiscal Year')),
                ('opening_date', models.DateField(verbose_name='Opening Date')),
                ('debit_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Debit Amount')),
                ('credit_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Credit Amount')),
                ('quantity', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=18, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Quantity')),
                ('unit_cost', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Unit Cost')),
            ],
            options={
                'verbose_name': 'Opening Balance',
                'verbose_name_plural': 'Opening Balances',
            },
        ),
    ]
