# Generated by Django 5.2.3 on 2025-06-30 05:57

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('organization', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='KeyboardShortcuts',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this record is active')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was soft deleted', null=True)),
                ('action_name', models.CharField(help_text='Internal name/identifier for the action', max_length=100, verbose_name='Action Name')),
                ('display_name', models.CharField(help_text='Human-readable name for the action', max_length=150, verbose_name='Display Name')),
                ('description', models.TextField(blank=True, help_text='Description of what this shortcut does', verbose_name='Description')),
                ('category', models.CharField(choices=[('general', 'General'), ('navigation', 'Navigation'), ('forms', 'Forms'), ('reports', 'Reports'), ('inventory', 'Inventory'), ('sales', 'Sales'), ('accounting', 'Accounting'), ('admin', 'Administration'), ('custom', 'Custom')], default='general', help_text='Category to group related shortcuts', max_length=20, verbose_name='Category')),
                ('key_combination', models.CharField(help_text="Full keyboard combination (e.g., 'Ctrl+S', 'Alt+F4')", max_length=50, verbose_name='Key Combination')),
                ('primary_key', models.CharField(help_text="Main key (e.g., 'S', 'F4', 'Enter')", max_length=20, verbose_name='Primary Key')),
                ('modifiers', models.CharField(blank=True, help_text="Modifier keys separated by + (e.g., 'Ctrl+Alt')", max_length=50, verbose_name='Modifiers')),
                ('is_enabled', models.BooleanField(default=True, help_text='Whether this shortcut is active', verbose_name='Enabled')),
                ('is_system_default', models.BooleanField(default=False, help_text='Whether this is a system default shortcut', verbose_name='System Default')),
                ('is_customizable', models.BooleanField(default=True, help_text='Whether users can modify this shortcut', verbose_name='Customizable')),
                ('is_global', models.BooleanField(default=False, help_text='Whether this shortcut works globally in the application', verbose_name='Global Shortcut')),
                ('context', models.CharField(blank=True, help_text="Specific context where shortcut is active (e.g., 'form', 'grid', 'modal')", max_length=100, null=True, verbose_name='Context')),
                ('page_url_pattern', models.CharField(blank=True, help_text='URL pattern where this shortcut is active (regex supported)', max_length=200, null=True, verbose_name='Page URL Pattern')),
                ('priority', models.PositiveIntegerField(default=100, help_text='Priority for shortcut resolution (lower = higher priority)', verbose_name='Priority')),
                ('sort_order', models.PositiveIntegerField(default=0, help_text='Order for displaying shortcuts in lists', verbose_name='Sort Order')),
                ('javascript_function', models.TextField(blank=True, help_text='JavaScript function to execute when shortcut is triggered', null=True, verbose_name='JavaScript Function')),
                ('alternative_combination', models.CharField(blank=True, help_text='Alternative keyboard combination for the same action', max_length=50, null=True, verbose_name='Alternative Combination')),
                ('branch', models.ForeignKey(help_text='Branch these shortcuts apply to', on_delete=django.db.models.deletion.CASCADE, related_name='keyboard_shortcuts', to='organization.branch', verbose_name='Branch')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Keyboard Shortcut',
                'verbose_name_plural': 'Keyboard Shortcuts',
                'indexes': [models.Index(fields=['branch', 'category'], name='organizatio_branch__d50193_idx'), models.Index(fields=['branch', 'is_enabled'], name='organizatio_branch__d96b6b_idx'), models.Index(fields=['action_name'], name='organizatio_action__8b5be9_idx'), models.Index(fields=['key_combination'], name='organizatio_key_com_e990bf_idx'), models.Index(fields=['context'], name='organizatio_context_1e5dab_idx'), models.Index(fields=['priority'], name='organizatio_priorit_9551a1_idx'), models.Index(fields=['sort_order'], name='organizatio_sort_or_cbd378_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('priority__gt', 0)), name='positive_priority'), models.CheckConstraint(condition=models.Q(('sort_order__gte', 0)), name='non_negative_sort_order')],
                'unique_together': {('branch', 'action_name'), ('branch', 'key_combination', 'context')},
            },
        ),
    ]
